name: Module CI/CD

on: 
  push:
    branches:
      - master

jobs: 
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    # # Npm install
    # - name: Use Node.js ${{ matrix.node-version }}
    #   uses: actions/setup-node@v1
    #   with:
    #     node-version: ${{ matrix.node-version }}
    # - run: npm ci
    #     
    #   
    # # Get the name from 'module.json'
    # - name: where am i
    #   shell: bash
    #   id: where-am-i
    #   run: ls -lha
    #   
    # # build
    # - name: Build the project
    #   shell: bash
    #   id: build
    #   run: node run build

    # Read info from 'module.json'
    - name: Get Version
      shell: bash
      id: get-version
      run: echo "::set-output name=version::$(node ./.github/workflows/get-version.js)"
    - name: Get Includes
      shell: bash
      id: get-includes
      run: echo "::set-output name=files::$(node ./.github/workflows/get-includes.js)"
      
    # Create a specific release
    - name: Substitute Manifest and Download Links For Versioned Ones
      id: sub_manifest_link_version
      uses: microsoft/variable-substitution@v1
      with:
        files: './dist/module.json'
      env:
        url: https://github.com/${{github.repository}}
        manifest: https://github.com/${{github.repository}}/releases/latest/download/module.json
        download: https://github.com/${{github.repository}}/releases/download/${{steps.get-version.outputs.version}}/module.zip
    - name: Zip Files
      working-directory: ./dist
      run: zip -r ../module.zip ${{steps.get-includes.outputs.files}}
    - name: Create Version Release
      id: create_version_release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true # set this to false if you want to prevent updating existing releases
        name: Release ${{ steps.get-version.outputs.version }}
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: './dist/module.json,./module.zip'
        tag: ${{ steps.get-version.outputs.version }}
    - name: Commit manifest file
      uses: EndBug/add-and-commit@v7
      with:
        add: ./dist/module.json
        author_name: "GitHub Actions"
        author_email: noreply@github.com
        branch: ${{github.ref}}
        message: "feat: update placeholders"
        push: true
    - name: Push the changes
      run: git push origin ${{github.ref}}

    # Update the 'latest' release
    - name: Substitute Manifest and Download Links For Versioned Ones
      id: sub_manifest_link_latest
      uses: microsoft/variable-substitution@v1
      with:
        files: './dist/module.json'
      env:
        url: https://github.com/${{github.repository}}
        manifest: https://github.com/${{github.repository}}/releases/latest/download/module.json
        download: https://github.com/${{github.repository}}/releases/latest/download/module.zip
    - name: Zip Files
      working-directory: ./dist
      run: zip -r ../module.zip ${{steps.get-includes.outputs.files}}
    - name: Update Latest Release
      id: create_latest_release
      uses: ncipollo/release-action@v1
      if: endsWith(github.ref, 'master')
      with:
        allowUpdates: true
        name: Latest
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: './dist/module.json, ./module.zip'
        tag: latest
